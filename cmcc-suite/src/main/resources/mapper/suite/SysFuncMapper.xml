<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cmcc.suite.mapper.SysFuncMapper">

	<resultMap type="SysFunc" id="SysFuncResult">
		<id     property="funcId"     column="func_id"     />
		<result property="parentId"   column="parent_id"   />
		<result property="ancestors"  column="ancestors"   />
		<result property="funcName"   column="func_name"   />
		<result property="orderNum"   column="order_num"   />
		<result property="leader"     column="leader"      />
		<result property="phone"      column="phone"       />
		<result property="email"      column="email"       />
		<result property="status"     column="status"      />
		<result property="delFlag"    column="del_flag"    />
		<result property="parentName" column="parent_name" />
		<result property="createBy"   column="create_by"   />
		<result property="createTime" column="create_time" />
		<result property="updateBy"   column="update_by"   />
		<result property="updateTime" column="update_time" />
	</resultMap>
	
	<sql id="selectFuncVo">
        select d.func_id, d.parent_id, d.ancestors, d.func_name, d.order_num, d.leader, d.phone, d.email, d.status, d.del_flag, d.create_by, d.create_time 
        from sys_func d
    </sql>
    
	<select id="selectFuncList" parameterType="SysDept" resultMap="SysFuncResult">
        <include refid="selectFuncVo"/>
        where d.del_flag = '0'
		<if test="funcId != null and funcId != 0">
			AND func_id = #{funcId}
		</if>
        <if test="parentId != null and parentId != 0">
			AND parent_id = #{parentId}
		</if>
		<if test="funcName != null and funcName != ''">
			AND func_name like concat('%', #{funcName}, '%')
		</if>
		<if test="status != null and status != ''">
			AND status = #{status}
		</if>
		<!-- 数据范围过滤 -->
		order by d.parent_id, d.order_num
    </select>
    
    <select id="selectFuncListByRoleId" resultType="Long">
		select d.func_id
		from sys_func d
            left join sys_role_dept rd on d.func_id = rd.func_id
        where rd.role_id = #{roleId}
            <if test="deptCheckStrictly">
              and d.func_id not in (select d.parent_id from sys_func d inner join sys_role_dept rd on d.func_id = rd.func_id and rd.role_id = #{roleId})
            </if>
		order by d.parent_id, d.order_num
	</select>
    
    <select id="selectFuncById" parameterType="Long" resultMap="SysFuncResult">
		select d.func_id, d.parent_id, d.ancestors, d.func_name, d.order_num, d.leader, d.phone, d.email, d.status,
			(select func_name from sys_func where func_id = d.parent_id) parent_name
		from sys_func d
		where d.func_id = #{funcId}
	</select>
    
    <select id="checkDeptExistUser" parameterType="Long" resultType="int">
		select count(1) from sys_user where func_id = #{funcId} and del_flag = '0'
	</select>
	
	<select id="hasChildByfuncId" parameterType="Long" resultType="int">
		select count(1) from sys_func
		where del_flag = '0' and parent_id = #{funcId} limit 1
	</select>
	
	<select id="selectChildrenDeptById" parameterType="Long" resultMap="SysFuncResult">
		select * from sys_func where find_in_set(#{funcId}, ancestors)
	</select>
	
	<select id="selectNormalChildrenDeptById" parameterType="Long" resultType="int">
		select count(*) from sys_func where status = 0 and del_flag = '0' and find_in_set(#{funcId}, ancestors)
	</select>
	
	<select id="checkfuncNameUnique" resultMap="SysFuncResult">
	    <include refid="selectFuncVo"/>
		where func_name=#{funcName} and parent_id = #{parentId} and del_flag = '0' limit 1
	</select>
    
    <insert id="insertDept" parameterType="SysDept">
 		insert into sys_func(
 			<if test="funcId != null and funcId != 0">func_id,</if>
 			<if test="parentId != null and parentId != 0">parent_id,</if>
 			<if test="funcName != null and funcName != ''">func_name,</if>
 			<if test="ancestors != null and ancestors != ''">ancestors,</if>
 			<if test="orderNum != null">order_num,</if>
 			<if test="leader != null and leader != ''">leader,</if>
 			<if test="phone != null and phone != ''">phone,</if>
 			<if test="email != null and email != ''">email,</if>
 			<if test="status != null">status,</if>
 			<if test="createBy != null and createBy != ''">create_by,</if>
 			create_time
 		)values(
 			<if test="funcId != null and funcId != 0">#{funcId},</if>
 			<if test="parentId != null and parentId != 0">#{parentId},</if>
 			<if test="funcName != null and funcName != ''">#{funcName},</if>
 			<if test="ancestors != null and ancestors != ''">#{ancestors},</if>
 			<if test="orderNum != null">#{orderNum},</if>
 			<if test="leader != null and leader != ''">#{leader},</if>
 			<if test="phone != null and phone != ''">#{phone},</if>
 			<if test="email != null and email != ''">#{email},</if>
 			<if test="status != null">#{status},</if>
 			<if test="createBy != null and createBy != ''">#{createBy},</if>
 			sysdate()
 		)
	</insert>
	
	<update id="updateDept" parameterType="SysDept">
 		update sys_func
 		<set>
 			<if test="parentId != null and parentId != 0">parent_id = #{parentId},</if>
 			<if test="funcName != null and funcName != ''">func_name = #{funcName},</if>
 			<if test="ancestors != null and ancestors != ''">ancestors = #{ancestors},</if>
 			<if test="orderNum != null">order_num = #{orderNum},</if>
 			<if test="leader != null">leader = #{leader},</if>
 			<if test="phone != null">phone = #{phone},</if>
 			<if test="email != null">email = #{email},</if>
 			<if test="status != null and status != ''">status = #{status},</if>
 			<if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
 			update_time = sysdate()
 		</set>
 		where func_id = #{funcId}
	</update>
	
	<update id="updateDeptChildren" parameterType="java.util.List">
	    update sys_func set ancestors =
	    <foreach collection="depts" item="item" index="index"
	        separator=" " open="case func_id" close="end">
	        when #{item.funcId} then #{item.ancestors}
	    </foreach>
	    where func_id in
	    <foreach collection="depts" item="item" index="index"
	        separator="," open="(" close=")">
	        #{item.funcId}
	    </foreach>
	</update>
	 
	<update id="updateDeptStatusNormal" parameterType="Long">
 	    update sys_func set status = '0' where func_id in 
 	    <foreach collection="array" item="funcId" open="(" separator="," close=")">
        	#{funcId}
        </foreach>
	</update>
	
	<delete id="deleteDeptById" parameterType="Long">
		update sys_func set del_flag = '2' where func_id = #{funcId}
	</delete>

</mapper> 